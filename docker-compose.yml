version: "3.4"
services:
  db:
    image: mdillon/postgis:11-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
  web:
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - db_user=${POSTGRES_USER}
      - db_password=${POSTGRES_PASSWORD}
      - db_name=${POSTGRES_DB}
      - db_host=db
      - db_port=${POSTGRES_PORT}
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}

  #  nginx:
  #    build:
  #      context: .
  #      dockerfile: Dockerfile.nginx
  #    volumes:
  #      - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #      - ./certs:/etc/nginx/external:ro
  #      - ./certificate_authority:/usr/local/share/ca-certificates:ro
  #    ports:
  #      - "443:443"
  #    environment:
  #      - DH_SIZE=2048
  #    depends_on:
  #      - web
  react:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/todo
      - nodemodulesdata:/todo/node_modules
    depends_on:
      - web
    environment:
      - CHOKIDAR_USEPOLLING=$CHOKIDAR_USEPOLLING
    stdin_open: true
volumes:
  pgdata:
  nodemodulesdata: